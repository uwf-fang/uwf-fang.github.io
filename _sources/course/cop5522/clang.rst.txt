**********
C Language
**********
This documents summarize the C language features frequently employed in this
course.

Compiler
========
gcc
---
We choose the ``gcc`` C language compiler from GCC (GNU Compiler Collection) as
our official compiler. This is the default C compiler on Linux (including the
Windows subsystem of Linux, WSL). Use other compilers at your own risk.

.. warning::

  The ``gcc`` provided with the ``MinGW`` package under Windows is not totally
  compatible to the ``gcc`` we use. Use it at your own risk.

.. warning::

  The ``gcc`` from the XCode Command-line tool on Mac OS is an alias of
  ``clang``, which is the LLVM C compiler.

Compilation Command
-------------------
A typical ``gcc`` compilation command looks like::

  gcc -o main main.c

Useful Compilation Flags
------------------------
+ ``-O`` specifies the compilation optimization level

  * ``-O0`` reduced optimization, default level, use as baseline
  * ``-O2``
  * ``-O3`` recommended
  * ``-Ofast`` with non-standard-compliant optimizations

+ ``-I`` specifies the path to include headers

  * ``-I.``

+ ``-l`` specifies the libraries to use

  * ``-lpthread``

+ ``-f`` specifies flags

  * ``-fpic``  Position dependent
  * ``-fopenmp``  enable OpenMP support

+ ``-std`` specifies the C language standard

  * ``-std=gnu90``
  * ``-std=gnu11``
  * ``-std=c99 -pedantic``
  * ``-std=c11 -pedantic``

Performance Related Operations in C
===================================
+ Memory operations

  * malloc
  * calloc
  * aligned_alloc (C11)
  * free
  * memset
  * memcpy
