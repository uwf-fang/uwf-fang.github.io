.. highlight:: c++
  :linenothreshold: 5

*****************
Memory Management
*****************

Memory regions
==============
When a program written with C++ is executed, a section of physical memory is
allocated to the program. The program will then partition the memory into
regions.

:code region: code (binary)
:static region: global and static variables
:stack region: local variables and function formal parameters
:heap region: dynamic data (allocated by **new** operator)

Dynamic Memory Allocation
=========================
+ Data stored in heap
+ ``new`` creates the data structure in heap memory and returns a pointer

  .. code-block:: c++

    int *intPtr = new int;  // single variable
    int *array = new int[10];  // array
    MyClass *myObjPtr = new MyClass();  // object

+ ``delete`` destruct the data structure the pointer is pointing to and release
  the memory in heap

  - always call delete on a pointer (dynamic array is also a pointer)
  - add [] if the pointer is pointing to a list of memory blocks (array)

  .. code-block:: c++

    delete intPtr;
    delete [] array1;
    delete myObjPtr;

+ The allocated data in heap are known as **dynamic data**

Memory leak
===========
+ only happens on data stored in the heap region (dynamic data)
+ dynamic data allocated (new) but not released (delete)
+ likely to be overlooked in function and class definitions when the flow of
  control is not obvious

Other Memory Problems
=====================
+ Stack overflow because of endless function calls, e.g. recursion
+ Out-of-boundary array index
+ Oversized C string operations
+ Uninitialized pointer access
+ Deleting the same pointer multiple times

Memory Problem Checking Tool
============================

.. note:

  Extended reading. Beneficial to projects.

The command line tool ``valgrind``, read instruction `here`__

.. __: https://valgrind.org/docs/manual/quick-start.html

Dynamic Data and Functions
==========================
Refer to the :ref:`array-passing` section for details on how
dynamic data allows returning an array from a function.

You can return dynamic data that are not array also.
