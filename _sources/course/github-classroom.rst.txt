***************************
GitHub and GitHub Classroom
***************************

We will be using the GitHub Classroom to assign, manage and grade the
programming projects. You will need to setup a github account before you can use the classroom service.

GitHub.com
==========

GitHub.com is the most popular hosting service for repositories managed with
git. It provided many useful services to programmers. It is also like a social
networks for programmers. Programmers collaborate on open source projects on
github.com.

You can clone or download public repositories easily from GitHub but when you
are working with private repositories like what we used in the class or pushing
changes to any repositories, you will need to input your credentials. Github has
recently deprecated password based authentication and you have to replace your
password with a more complicated API key obtained from the website. It is
actually better to use key pair based authentication method. You can read this
`document`__ on how to set it up.

.. __: https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account


GitHub Classroom
================

The GitHub Classroom is a service from GitHub.com. It is free of charges for
educational usage. It is a great way to assign, collect and grade programming
assignments.

Before you start to work on the assignment, you have to sign up an account at
GitHub.com. You will be asked to bind your account with your name listed in the
roster in the GitHub classroom.

To use GitHub Classroom for assignment, follow the following steps:

#. Accept the assignment

   An invitation link will be sent to you. Open it in a browser. For the first
   time, you will be asked to log in to GitHub (create one if you do not have)
   account and select your name in the roster to bind to your GitHub account.
   **Never skip the roster** when you are asked to bind the account. Unlinked
   accounts will bring in many problems in the grading process.

   A project repository will be created for you and you can refresh the page after several seconds to get the URL to your repository.

#. Follow the general project workflow in the
   :doc:``programming project document</course/project>``. The GitHub related
   details are listed below:

   #. Copy the repository URI from your project repository web page (the green
      **code** button). Either using SSH protocol URI start with
      ``git@git.github.com`` or HTTPS protocol URI start with
      ``https://github.com/``.
   #. Run ``git clone <URI>`` in the parent directory you plan to put the
      project directory in.
   #. A new directory will be created and you can start developing based on the
      starting files in the directory.

.. note::

  After each push to the repository, auto-grading actions will be triggered.
  Wait a couple of minutes until the grades is updated. Check the result in the
  *Action* tab in the GitHub repository page by clicking the latest commit.
  Expend the *auto-grading* section to see details.

.. seealso::

   You may refer to the details on the linear git workflow employed in the
   general project workflow in the the :doc:``git document</tools/git>``.
