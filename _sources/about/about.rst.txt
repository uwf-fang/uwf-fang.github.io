*****
About
*****

Website History
===============

It is a long journey to find a good way to create a website to share course
materials. Have tried many methods so far and Sphinx is the most satisfactory
solution followed by Pelican.

The journey started from the standard LMS system used in the university. Back in
the days when I worked with Desire2Learn, it provided many features I want. I
have designed some nice-looking themes, and it is easy to use CSS in the system.
When the whole Florida state transitioned to Canvas, I gained many useful
features but lost several of my favorite features, including the CSS support for
embedded HTML. Also, the way to synchronize contents shared among multiple
course shells in Canvas is cumbersome.

As a programmer, I deeply believe in the "Do not repeat yourself" rule and feel
sad when I have to copy/paste and import/export contents repeatedly on Canvas. I
have searched for an efficient way to host shared contents, so I can have a
single place to edit the contents to be visible in many places. I found Google
Drive to be a pretty good solution given the great support from Canvas on
embedded Google Docs or files hosted on Google Drive. The biggest drawback here
is that Google Docs is not aligned to the way I work with documents. Like many
programmers, I prefer pure text format as they can be managed with version
control system the same way as source code files. Google Doc feels very awkward
to edit documents in compared to a good IDE or editor.

There are many ways to compose formatted documents in pure text format. The most
obvious solution is Latex. I like Latex when I am working on publications in the
PDF format, but there is no easy way to automatically build and share the
documents online. Converting to PDF and host on Google drive is a huge hustle to
encounter every time I update the contents.

Given the complexity of the formatting of my documents with source codes,
cross-reference, etc. Markdown is not a good solution because its limited
extensibility. The feature-rich and extensible restructuredtext (RST) format
turns out to be the best choice. I have tried the RST based static website
generator Pelican and was pretty happy with it until I discovered Sphinx. I have
been using Sphinx on documentation for a while but have realized its capability
in website generation.

Now I have this website with contents written as RST documents, compiled with Sphinx and hosted on GitHub pages. Very happy with this combination.

About Me
========
I am an instructor at UWF starting from 2021. I have taught many courses at UWF before as Postdoc and Adjunct instructor. Furthermore, I am currently working on my Ph.D. degree in computer science at FSU.
