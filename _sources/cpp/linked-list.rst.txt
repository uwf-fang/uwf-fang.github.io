**************************
Linked-List Data Structure
**************************
A linked-list is a sequential data structure implemented as linked nodes. Each
node typically contains one or more values and one or more links to neighboring
nodes.

Implementation Variations
=========================
+ Minimal implementation

  * head pointer only
  * singly-linked

+ Number of links per node

  * singly-linked - pointer to next node
  * doubly-linked - pointers to previous and next nodes

+ Terminal node handling

  * cyclic - last node point its next pointer to the first node (singly)
  * acyclic

+ Dummy node before the first node

  * simplifies empty list and first node handling

C++ Implementation Details
==========================
+ Classes

  * linked list class

    - head pointer
    - tail pointer

  * node class/struct

    - top-level class, not nested (preferred most of the time)
    - nested class/struct (better information hiding)

+ Templated for more generic usages

Pitfalls
========
+ Linked-List is not an ADT. It is a data structure to be used to implement some
  ADTs.
+ Not handling empty list
+ Not handling the first/last element

Linked-list Glossary
====================
.. glossary::

  Linked-List
    A sequential data structure based on linked nodes

  Link
    The pointer pointing to other nodes

  Node
    The base unit linked together to form a linked-list

  Dummy Node (linked-list)
    The empty node added in front of the first node to simplify certain
    linked-list algorithms
