*****
About
*****


The Website
===========
It has been a long journey to find an optimal method to create a website to
share course materials. After many attempts on content publishing platforms,
Sphinx turned out to be the most satisfactory solution.

LMS to External Website
-----------------------
The adventure began with the university's conventional LMS system. When I used
to deal with LMSs based on Desire2Learn, it had some appealing functionalities,
I had created some respectable themes, and the system was simple to use with
CSS. When the entire Florida State System of Universities switched to Canvas, I
lost a few of my favorite capabilities, notably the support for CSS in embedded
HTML, while I gained other useful features. Additionally, Canvas' method for
synchronizing contents that are shared across several course shells is
complicated.

Attempt with Google Drive
-------------------------
As a programmer who firmly adheres to the principle "Do not repeat yourself," I
find it distressing to constantly copy, paste, and import, export, material on
Canvas. I've looked for effective ways to host shared material so that I can
modify it once and have it available everywhere. Given the excellent support
from Canvas for embedding Google Docs or files hosted on Google Drive, I
thought Google Drive was a really good alternative. The major flaw in this
situation is that Google Docs does not support how I work with documents. I
prefer pure text formats, like many other programmers, because they can be
controlled using version control systems in the same way as source code files.
Compared to a decent IDE or editor, Google Doc makes editing documents feel
incredibly unpleasant.

Latex to PDFs
-------------
Pure text formatted documents can be created in a variety of ways. Latex is the
most obvious solution. When working on publications in PDF format, I prefer
Latex, but there is no simple solution to automatically create and publish the
documents online. Every time I update the contents, converting to PDF and
hosting on Google Drive is a major hassle.

ReStructuredText vs Markdown
----------------------------
Due to its constrained extensibility and the complexity of my documents'
formatting, which includes source codes, cross-references, etc., Markdown is
not a suitable alternative. It turns out that the feature-rich and extensible
restructuredtext (RST) format is the best option. Prior to learning about
Sphinx, I had tried the RST-based static website generator Pelican and was
generally satisfied with it. I've been using Sphinx for documentation for some
time, but I just noticed that it can also create websites.

Finally Sphinx
--------------
Now I have this website with contents written as RST documents, compiled with
Sphinx and hosted on GitHub pages. Very happy with this combination.
