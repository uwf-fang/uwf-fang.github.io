**************************
Linked-List Data Structure
**************************
A linked-list is a sequential data structure implemented as linked nodes. Each
node typically contains one or more values and one or more links to neighboring
nodes. The term **link** means pointers pointing from one node to another.

.. graphviz::
  :caption: a minimal linked-list

  digraph ll {
      rankdir=LR;
      node [shape=record];
      head [label="head"];
      a [label="{ <data> 12 | <ref>  }", width=1.2];
      b [label="{ <data> 99 | <ref>  }"];
      c [label="{ <data> 37 | <ref>  }"];
      head:e -> a:data    [arrowhead=vee, arrowtail=none, dir=both, tailclip=false];
      a:ref:c -> b:data [arrowhead=vee, arrowtail=dot, dir=both, tailclip=false];
      b:ref:c -> c:data [arrowhead=vee, arrowtail=dot, dir=both, tailclip=false];
  }

Implementation Variations
=========================
+ Minimal implementation

  * head pointer
  * singly-linked

+ Number of links per node

  * singly-linked - a pointer to next node
  * doubly-linked - pointers to previous and next nodes

+ Terminal node handling

  * cyclic - link(s) connecting the first and last nodes
  * acyclic

+ Dummy node before the first node

  * simplifies empty list and first node handling

C++ Implementation Details
==========================
+ Classes

  * linked-list class

    - head pointer
    - tail pointer

  * node class/struct

    - top-level class, not nested (preferred most of the time)
    - nested class/struct (better information hiding)

+ Templated for more generic usages

Pitfalls
========
+ Linked-List is not an ADT. It is a data structure to be used to implement some
  ADTs.
+ Not handling empty list
+ Not handling the first/last element

Linked-list Glossary
====================
.. glossary::

  Linked-List
    A sequential data structure based on linked nodes

  Link
    A pointer pointing to node

  Node (linked-list)
    The base unit linked together to form a linked-list

  Dummy Node (linked-list)
    The empty node added in front of the first node to simplify certain
    linked-list algorithms
